"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[42641],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5055:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const o={id:"use-cases",title:"ZIO Schema Use cases",sidebar_label:"Use cases"},i=void 0,l={unversionedId:"use-cases",id:"use-cases",title:"ZIO Schema Use cases",description:"ZIO Schema allows you to create representations of your data types as values.",source:"@site/node_modules/@zio.dev/zio-schema/use-cases.md",sourceDirName:".",slug:"/use-cases",permalink:"/zio-schema/use-cases",draft:!1,tags:[],version:"current",frontMatter:{id:"use-cases",title:"ZIO Schema Use cases",sidebar_label:"Use cases"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/zio-schema/"},next:{title:"Our First Schema",permalink:"/zio-schema/our-first-schema"}},s={},u=[],c={toc:u};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"ZIO Schema allows you to create representations of your data types as values."),(0,n.kt)("p",null,"Once you have a representation of your data types, you can use it to"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"serialize and deserialize your types"),(0,n.kt)("li",{parentName:"ul"},"validate your types"),(0,n.kt)("li",{parentName:"ul"},"transform your types"),(0,n.kt)("li",{parentName:"ul"},"create instances of your types")),(0,n.kt)("p",null,"You can then use one of the various codecs (or create your own) to serialize and deserialize your types."),(0,n.kt)("p",null,"Example of possible codecs are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"CSV Codec"),(0,n.kt)("li",{parentName:"ul"},"JSON Codec (already available)"),(0,n.kt)("li",{parentName:"ul"},"Apache Avro Codec (in progress)"),(0,n.kt)("li",{parentName:"ul"},"Apache Thrift Codec (in progress)"),(0,n.kt)("li",{parentName:"ul"},"XML Codec"),(0,n.kt)("li",{parentName:"ul"},"YAML Codec"),(0,n.kt)("li",{parentName:"ul"},"Protobuf Codec (already available)"),(0,n.kt)("li",{parentName:"ul"},"QueryString Codec"),(0,n.kt)("li",{parentName:"ul"},"etc.")),(0,n.kt)("p",null,"Example use cases that are possible:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Serializing and deserializing JSON"),(0,n.kt)("li",{parentName:"ul"},"Serializing and deserializing XML"),(0,n.kt)("li",{parentName:"ul"},"Validating JSON"),(0,n.kt)("li",{parentName:"ul"},"Validating XML"),(0,n.kt)("li",{parentName:"ul"},"Transforming JSON"),(0,n.kt)("li",{parentName:"ul"},"Transforming XML"),(0,n.kt)("li",{parentName:"ul"},"Transforming JSON to XML"),(0,n.kt)("li",{parentName:"ul"},"Transforming XML to JSON"),(0,n.kt)("li",{parentName:"ul"},"Creating diffs from arbitrary data structures"),(0,n.kt)("li",{parentName:"ul"},"Creating migrations / evolutions e.g. of Events used in Event-Sourcing"),(0,n.kt)("li",{parentName:"ul"},"Transformation pipelines, e.g.",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"convert from protobuf to object, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"PersonDTO"),","),(0,n.kt)("li",{parentName:"ol"},"transform to another representation, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Person"),","),(0,n.kt)("li",{parentName:"ol"},"validate"),(0,n.kt)("li",{parentName:"ol"},"transform to JSON ",(0,n.kt)("inlineCode",{parentName:"li"},"JsonObject")),(0,n.kt)("li",{parentName:"ol"},"serialize to ",(0,n.kt)("inlineCode",{parentName:"li"},"String"))))))}p.isMDXComponent=!0}}]);