"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[37162],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>v});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),u=o,v=d["".concat(i,".").concat(u)]||d[u]||m[u]||a;return r?n.createElement(v,c(c({ref:t},l),{},{components:r})):n.createElement(v,c({ref:t},l))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:o,c[1]=s;for(var p=2;p<a;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},86632:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={id:"websocket-server",title:"WebSocket Server Example",sidebar_label:"WebSocket Server"},c=void 0,s={unversionedId:"zio-http/examples/advanced/websocket-server",id:"zio-http/examples/advanced/websocket-server",title:"WebSocket Server Example",description:"",source:"@site/docs/zio-http/examples/advanced/websocket-server.md",sourceDirName:"zio-http/examples/advanced",slug:"/zio-http/examples/advanced/websocket-server",permalink:"/zio-http/examples/advanced/websocket-server",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/advanced/websocket-server.md",tags:[],version:"current",frontMatter:{id:"websocket-server",title:"WebSocket Server Example",sidebar_label:"WebSocket Server"},sidebar:"ecosystem-sidebar",previous:{title:"Streaming Response",permalink:"/zio-http/examples/advanced/streaming-response"},next:{title:"Introduction to ZIO Insight",permalink:"/zio-insight/"}},i={},p=[],l={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.http._\nimport zio.http.Server\nimport zio.socket._\nimport zio._\nimport zio.duration._\nimport zio.stream.ZStream\n\nobject WebSocketAdvanced extends App {\n  // Message Handlers\n  private val open = Socket.succeed(WebSocketFrame.text("Greetings!"))\n\n  private val echo = Socket.collect[WebSocketFrame] { case WebSocketFrame.Text(text) =>\n    ZStream.repeat(WebSocketFrame.text(s"Received: $text")).schedule(Schedule.spaced(1 second)).take(3)\n  }\n\n  private val fooBar = Socket.collect[WebSocketFrame] {\n    case WebSocketFrame.Text("FOO") => ZStream.succeed(WebSocketFrame.text("BAR"))\n    case WebSocketFrame.Text("BAR") => ZStream.succeed(WebSocketFrame.text("FOO"))\n  }\n\n  // Setup protocol settings\n  private val protocol = SocketProtocol.subProtocol("json")\n\n  // Setup decoder settings\n  private val decoder = SocketDecoder.allowExtensions\n\n  // Combine all channel handlers together\n  private val socketApp = {\n\n    SocketApp(echo merge fooBar) // Called after each message being received on the channel\n\n      // Called after the request is successfully upgraded to websocket\n      .onOpen(open)\n\n      // Called after the connection is closed\n      .onClose(_ => console.putStrLn("Closed!").ignore)\n\n      // Called whenever there is an error on the socket channel\n      .onError(_ => console.putStrLn("Error!").ignore)\n\n      // Setup websocket decoder config\n      .withDecoder(decoder)\n\n      // Setup websocket protocol config\n      .withProtocol(protocol)\n  }\n\n  private val app =\n    Http.collectZIO[Request] {\n      case Method.GET -> !! / "greet" / name  => UIO(Response.text(s"Greetings ${name}!"))\n      case Method.GET -> !! / "subscriptions" => socketApp.toResponse\n    }\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    Server.start(8090, app).exitCode\n}\n\n')))}m.isMDXComponent=!0}}]);