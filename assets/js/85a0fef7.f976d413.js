"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[71018],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>f});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var g=r.createContext({}),s=function(e){var t=r.useContext(g),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},c=function(e){var t=s(e.components);return r.createElement(g.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,g=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(o),u=n,f=p["".concat(g,".").concat(u)]||p[u]||m[u]||i;return o?r.createElement(f,l(l({ref:t},c),{},{components:o})):r.createElement(f,l({ref:t},c))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,l=new Array(i);l[0]=u;var a={};for(var g in t)hasOwnProperty.call(t,g)&&(a[g]=t[g]);a.originalType=e,a[p]="string"==typeof e?e:n,l[1]=a;for(var s=2;s<i;s++)l[s]=o[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}u.displayName="MDXCreateElement"},7342:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>g,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=o(87462),n=(o(67294),o(3905));const i={id:"metrics",title:"Log Metrics"},l=void 0,a={unversionedId:"zio-logging/metrics",id:"zio-logging/metrics",title:"Log Metrics",description:"Log metrics collecting metrics related to ZIO logging (all ZIO.log* functions).",source:"@site/docs/zio-logging/metrics.md",sourceDirName:"zio-logging",slug:"/zio-logging/metrics",permalink:"/zio-logging/metrics",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-logging/metrics.md",tags:[],version:"current",frontMatter:{id:"metrics",title:"Log Metrics"},sidebar:"ecosystem-sidebar",previous:{title:"SLF4J bridge",permalink:"/zio-logging/slf4j-bridge"},next:{title:"Testing",permalink:"/zio-logging/testing"}},g={},s=[{value:"Examples",id:"examples",level:2},{value:"Console logger with metrics",id:"console-logger-with-metrics",level:3}],c={toc:s};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Log metrics collecting metrics related to ZIO logging (all ",(0,n.kt)("inlineCode",{parentName:"p"},"ZIO.log*")," functions).\nAs ZIO core supporting multiple loggers, this logging metrics collector is implemented as specific ",(0,n.kt)("inlineCode",{parentName:"p"},"ZLogger"),"\nwhich is responsible just for collecting metrics of all logs - ",(0,n.kt)("inlineCode",{parentName:"p"},"ZIO.log*")," functions."),(0,n.kt)("p",null,"Metrics layer:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"val layer = zio.logging.logMetrics\n")),(0,n.kt)("p",null,"Metrics:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"zio_logger_all_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.All")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_fatal_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.Fatal")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_error_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.Error")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_warn_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.Warning")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_info_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.Info")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_debug_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.Debug")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_trace_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.Trace")),(0,n.kt)("li",{parentName:"ul"},"zio_logger_none_total - logs count for ",(0,n.kt)("inlineCode",{parentName:"li"},"LogLevel.None"))),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("p",null,"You can find the source code ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-logging/tree/master/examples/src/main/scala/zio/logging/example"},"here")),(0,n.kt)("h3",{id:"console-logger-with-metrics"},"Console logger with metrics"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'package zio.logging.example\n\nimport zio.logging.{ LogFormat, console, logMetrics }\nimport zio.{ ExitCode, Runtime, Scope, ZIO, ZIOAppArgs, ZIOAppDefault, ZLayer }\nimport zio.metrics.connectors.prometheus.{ prometheusLayer, publisherLayer, PrometheusPublisher }\nimport zio.metrics.connectors.MetricsConfig\nimport zio._\n\nobject MetricsApp extends ZIOAppDefault {\n\n  override val bootstrap: ZLayer[ZIOAppArgs, Any, Any] =\n    Runtime.removeDefaultLoggers >>> (console(LogFormat.default) ++ logMetrics)\n\n  override def run: ZIO[Scope, Any, ExitCode] =\n    (for {\n      _            <- ZIO.logInfo("Start")\n      _            <- ZIO.logWarning("Some warning")\n      _            <- ZIO.logError("Some error")\n      _            <- ZIO.logError("Another error")\n      _            <- ZIO.sleep(1.second)\n      metricValues <- ZIO.serviceWithZIO[PrometheusPublisher](_.get)\n      _            <- Console.printLine(metricValues)\n      _            <- ZIO.logInfo("Done")\n    } yield ExitCode.success)\n      .provideLayer((ZLayer.succeed(MetricsConfig(200.millis)) ++ publisherLayer) >+> prometheusLayer)\n\n}\n')),(0,n.kt)("p",null,"Expected Console Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'timestamp=2022-12-20T20:42:59.781481+01:00 level=INFO thread=zio-fiber-6 message="Start"\ntimestamp=2022-12-20T20:42:59.810161+01:00 level=WARN thread=zio-fiber-6 message="Some warning"\ntimestamp=2022-12-20T20:42:59.81197+01:00  level=ERROR thread=zio-fiber-6 message="Some error"\ntimestamp=2022-12-20T20:42:59.813489+01:00 level=ERROR thread=zio-fiber-6 message="Another error"\n# TYPE zio_logger_warn_total counter\n# HELP zio_logger_warn_total Some help\nzio_logger_warn_total 1.0 1671565380643\n# TYPE zio_logger_info_total counter\n# HELP zio_logger_info_total Some help\nzio_logger_info_total 1.0 1671565380643\n# TYPE zio_logger_error_total counter\n# HELP zio_logger_error_total Some help\nzio_logger_error_total 2.0 1671565380643\ntimestamp=2022-12-20T20:43:00.835177+01:00 level=INFO thread=zio-fiber-6 message="Done"\n')))}p.isMDXComponent=!0}}]);