"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[91997],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},58927:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={id:"authentication-server",title:"Authentication Server Example",sidebar_label:"Authentication Server"},i=void 0,p={unversionedId:"zio-http/examples/advanced/authentication-server",id:"zio-http/examples/advanced/authentication-server",title:"Authentication Server Example",description:"",source:"@site/docs/zio-http/examples/advanced/authentication.md",sourceDirName:"zio-http/examples/advanced",slug:"/zio-http/examples/advanced/authentication-server",permalink:"/zio-http/examples/advanced/authentication-server",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/advanced/authentication.md",tags:[],version:"current",frontMatter:{id:"authentication-server",title:"Authentication Server Example",sidebar_label:"Authentication Server"},sidebar:"ecosystem-sidebar",previous:{title:"WebSocket",permalink:"/zio-http/examples/basic/websocket"},next:{title:"Concrete Entity",permalink:"/zio-http/examples/advanced/concrete-entity"}},s={},c=[],l={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import pdi.jwt.{Jwt, JwtAlgorithm, JwtClaim}\nimport zio.http._\nimport zio.http.Server\nimport zio._\n\nimport java.time.Clock\n\nobject Authentication extends App {\n  // Secret Authentication key\n  val SECRET_KEY = "secretKey"\n\n  implicit val clock: Clock = Clock.systemUTC\n\n  // Helper to encode the JWT token\n  def jwtEncode(username: String): String = {\n    val json  = s"""{"user": "${username}"}"""\n    val claim = JwtClaim { json }.issuedNow.expiresIn(60)\n    Jwt.encode(claim, SECRET_KEY, JwtAlgorithm.HS512)\n  }\n\n  // Helper to decode the JWT token\n  def jwtDecode(token: String): Option[JwtClaim] = {\n    Jwt.decode(token, SECRET_KEY, Seq(JwtAlgorithm.HS512)).toOption\n  }\n\n  // Authentication middleware\n  // Takes in a Failing HttpApp and a Succeed HttpApp which are called based on Authentication success or failure\n  // For each request tries to read the `X-ACCESS-TOKEN` header\n  // Validates JWT Claim\n  def authenticate[R, E](fail: HttpApp[R, E], success: JwtClaim => HttpApp[R, E]): HttpApp[R, E] =\n    Http\n      .fromFunction[Request] {\n        _.getHeader("X-ACCESS-TOKEN")\n          .flatMap(header => jwtDecode(header._2.toString))\n          .fold[HttpApp[R, E]](fail)(success)\n      }\n      .flatten\n\n  // Http app that requires a JWT claim\n  def user(claim: JwtClaim): UHttpApp = Http.collect[Request] {\n    case Method.GET -> !! / "user" / name / "greet" => Response.text(s"Welcome to the ZIO party! ${name}")\n    case Method.GET -> !! / "user" / "expiration"   => Response.text(s"Expires in: ${claim.expiration.getOrElse(-1L)}")\n  }\n\n  // App that let\'s the user login\n  // Login is successful only if the password is the reverse of the username\n  def login: UHttpApp = Http.collect[Request] { case Method.GET -> !! / "login" / username / password =>\n    if (password.reverse == username) Response.text(jwtEncode(username))\n    else Response.fromHttpError(HttpError.Unauthorized("Invalid username of password\\n"))\n  }\n\n  // Composing all the HttpApps together\n  val app: UHttpApp = login ++ authenticate(Http.forbidden("Not allowed!"), user)\n\n  // Run it like any simple app\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    Server.start(8090, app).exitCode\n}\n\n')))}d.isMDXComponent=!0}}]);