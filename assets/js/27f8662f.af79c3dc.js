"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[29671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(r),v=o,d=u["".concat(p,".").concat(v)]||u[v]||m[v]||s;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=v;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},75095:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const s={id:"https-server",title:"Https Server Example",sidebar_label:"Https Server"},a=void 0,i={unversionedId:"zio-http/examples/basic/https-server",id:"zio-http/examples/basic/https-server",title:"Https Server Example",description:"",source:"@site/docs/zio-http/examples/basic/https-server.md",sourceDirName:"zio-http/examples/basic",slug:"/zio-http/examples/basic/https-server",permalink:"/zio-http/examples/basic/https-server",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/basic/https-server.md",tags:[],version:"current",frontMatter:{id:"https-server",title:"Https Server Example",sidebar_label:"Https Server"},sidebar:"ecosystem-sidebar",previous:{title:"Http Server",permalink:"/zio-http/examples/basic/http-server"},next:{title:"WebSocket",permalink:"/zio-http/examples/basic/websocket"}},p={},c=[],l={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.http._\nimport zio.http.service.ServerChannelFactory\nimport zio.http.service.ServerSSLHandler._\nimport zio.http.service.{EventLoopGroup}\nimport zio._\n\nobject HttpsHelloWorld extends App {\n  // Create HTTP route\n  val app: HttpApp[Any, Nothing] = Http.collect[Request] {\n    case Method.GET -> !! / "text" => Response.text("Hello World!")\n    case Method.GET -> !! / "json" => Response.json("""{"greetings": "Hello World!"}""")\n  }\n\n  /**\n   * sslcontext can be created using SslContexBuilder. In this example an inbuilt API using keystore is used. For\n   * testing this example using curl, setup the certificate named "server.crt" from resources for the OS. Alternatively\n   * you can create the keystore and certificate using the following link\n   * https://medium.com/@maanadev/netty-with-https-tls-9bf699e07f01\n   */\n  val sslctx = ctxFromCert(\n    getClass().getClassLoader().getResourceAsStream("server.crt"),\n    getClass().getClassLoader().getResourceAsStream("server.key"),\n  )\n\n  private val server =\n    Server.port(8090) ++ Server.app(app) ++ Server.ssl(\n      ServerSSLOptions(sslctx, SSLHttpBehaviour.Accept),\n    )\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] = {\n    server.make.useForever\n      .provideCustomLayer(ServerChannelFactory.auto ++ EventLoopGroup.auto(0))\n      .exitCode\n  }\n}\n')))}m.isMDXComponent=!0}}]);