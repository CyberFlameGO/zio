"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[62821],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||l[d]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},74708:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={id:"interactive-processes",title:"Interactive Processes"},s=void 0,i={unversionedId:"interactive-processes",id:"interactive-processes",title:"Interactive Processes",description:"Sometimes you want to interact with a process in a back-and-forth manner by sending requests to the process and receiving responses back. For example, interacting with a repl-like process like node -i, python -i, etc. or an ssh server.",source:"@site/node_modules/@zio.dev/zio-process/interactive-processes.md",sourceDirName:".",slug:"/interactive-processes",permalink:"/zio-process/interactive-processes",draft:!1,tags:[],version:"current",frontMatter:{id:"interactive-processes",title:"Interactive Processes"},sidebar:"sidebar",previous:{title:"Piping",permalink:"/zio-process/piping"},next:{title:"Other",permalink:"/zio-process/other"}},c={},p=[],u={toc:p};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sometimes you want to interact with a process in a back-and-forth manner by sending requests to the process and receiving responses back. For example, interacting with a repl-like process like ",(0,o.kt)("inlineCode",{parentName:"p"},"node -i"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"python -i"),", etc. or an ssh server."),(0,o.kt)("p",null,"Here is an example of communicating with an interactive Python shell:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'for {\n  commandQueue <- Queue.unbounded[Chunk[Byte]]\n  process      <- Command("python", "-qi").stdin(ProcessInput.fromQueue(commandQueue)).run\n  _            <- process.stdout.linesStream.foreach { response =>\n                    ZIO.debug(s"Response from REPL: $response")\n                  }.forkDaemon\n  _            <- commandQueue.offer(Chunk.fromArray("1+1\\n".getBytes(StandardCharsets.UTF_8)))\n  _            <- commandQueue.offer(Chunk.fromArray("2**8\\n".getBytes(StandardCharsets.UTF_8)))\n  _            <- commandQueue.offer(Chunk.fromArray("import random\\nrandom.randint(1, 100)\\n".getBytes(StandardCharsets.UTF_8)))\n  _            <- commandQueue.offer(Chunk.fromArray("exit()\\n".getBytes(StandardCharsets.UTF_8)))\n} yield ()\n')),(0,o.kt)("p",null,"You would probably want to create a helper for the repeated code, but this just a minimal example to help get you started."))}l.isMDXComponent=!0}}]);