"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[14169],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return a?r.createElement(g,o(o({ref:t},u),{},{components:a})):r.createElement(g,o({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4983:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(87462),n=(a(67294),a(3905));const i={id:"index",title:"What is Quill?"},o=void 0,l={unversionedId:"index",id:"index",title:"What is Quill?",description:"Quill provides a Quoted Domain Specific Language (QDSL) to express queries in Scala and execute them in a target language. The library's core is designed to support multiple target languages, currently featuring specializations for Structured Query Language (SQL) and Cassandra Query Language (CQL).",source:"@site/node_modules/@zio.dev/zio-quill/index.md",sourceDirName:".",slug:"/",permalink:"/zio-quill/",draft:!1,tags:[],version:"current",frontMatter:{id:"index",title:"What is Quill?"},sidebar:"sidebar",next:{title:"Getting Started",permalink:"/zio-quill/getting-started"}},s={},p=[],u={toc:p};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Quill provides a Quoted Domain Specific Language (",(0,n.kt)("a",{parentName:"p",href:"http://homepages.inf.ed.ac.uk/wadler/papers/qdsl/qdsl.pdf"},"QDSL"),") to express queries in Scala and execute them in a target language. The library's core is designed to support multiple target languages, currently featuring specializations for Structured Query Language (",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SQL"},"SQL"),") and Cassandra Query Language (",(0,n.kt)("a",{parentName:"p",href:"https://cassandra.apache.org/doc/latest/cql/"},"CQL"),")."),(0,n.kt)("blockquote",null,(0,n.kt)("h3",{parentName:"blockquote",id:"scala-3-support"},"Scala 3 Support"),(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-protoquill"},"ProtoQuill")," provides Scala 3 support for Quill rebuilding on top of new metaprogramming capabilities from the ground > up! It is published to maven-central as the ",(0,n.kt)("inlineCode",{parentName:"p"},"quill-<module>_3")," line of artifacts.")),(0,n.kt)("blockquote",null,(0,n.kt)("h3",{parentName:"blockquote",id:"doobie-support"},"Doobie Support"),(0,n.kt)("p",{parentName:"blockquote"},"See ",(0,n.kt)("a",{parentName:"p",href:"#quill-doobie"},"here")," for Doobie integration instructions.")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/getquill/quill/master/example.gif",alt:"example"})),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Boilerplate-free mapping"),": The database schema is mapped using simple case classes."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Quoted DSL"),": Queries are defined inside a ",(0,n.kt)("inlineCode",{parentName:"li"},"quote")," block. Quill parses each quoted block of code (quotation) at compile time and translates them to an internal Abstract Syntax Tree (AST)"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Compile-time query generation"),": The ",(0,n.kt)("inlineCode",{parentName:"li"},"ctx.run")," call reads the quotation's AST and translates it to the target language at compile time, emitting the query string as a compilation message. As the query string is known at compile time, the runtime overhead is very low and similar to using the database driver directly."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Compile-time query validation"),": If configured, the query is verified against the database at compile time and the compilation fails if it is not valid. The query validation ",(0,n.kt)("strong",{parentName:"li"},"does not")," alter the database state.")),(0,n.kt)("p",null,"Note: The GIF example uses Eclipse, which shows compilation messages to the user."))}c.isMDXComponent=!0}}]);