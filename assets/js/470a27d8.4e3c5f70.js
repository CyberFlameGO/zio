"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[98201],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(a),m=n,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},75489:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const i={id:"index",title:"Introduction to ZIO Interop Scalaz",sidebar_label:"ZIO Interop Scalaz"},o=void 0,l={unversionedId:"index",id:"index",title:"Introduction to ZIO Interop Scalaz",description:"This library provides instances for several Scalaz typeclasses.",source:"@site/node_modules/@zio.dev/zio-interop-scalaz/index.md",sourceDirName:".",slug:"/",permalink:"/zio-interop-scalaz/",draft:!1,tags:[],version:"current",frontMatter:{id:"index",title:"Introduction to ZIO Interop Scalaz",sidebar_label:"ZIO Interop Scalaz"},sidebar:"sidebar"},p={},s=[{value:"Example",id:"example",level:3},{value:"<code>ZIO</code> parallel <code>Applicative</code> instance",id:"zio-parallel-applicative-instance",level:2},{value:"Example",id:"example-1",level:3}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This library provides instances for several Scalaz typeclasses."),(0,n.kt)("h3",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"import scalaz._, Scalaz._\nimport zio.interop.scalaz._\n\ntype Database = IList[User]\n\ndef findUser(id: UserId): ZIO[Database, UserError, User] = ...\ndef findUsers(ids: IList[UserId]): ZIO[Database, UserError, IList[User]] = ids.traverse(findUser(_))\n")),(0,n.kt)("h2",{id:"zio-parallel-applicative-instance"},(0,n.kt)("inlineCode",{parentName:"h2"},"ZIO")," parallel ",(0,n.kt)("inlineCode",{parentName:"h2"},"Applicative")," instance"),(0,n.kt)("p",null,"Due to ",(0,n.kt)("inlineCode",{parentName:"p"},"Applicative")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Monad")," coherence law ",(0,n.kt)("inlineCode",{parentName:"p"},"ZIO"),"'s ",(0,n.kt)("inlineCode",{parentName:"p"},"Applicative")," instance has to be implemented in terms of ",(0,n.kt)("inlineCode",{parentName:"p"},"bind")," hence when composing multiple effects using ",(0,n.kt)("inlineCode",{parentName:"p"},"Applicative")," they will be sequenced. To cope with that limitation ",(0,n.kt)("inlineCode",{parentName:"p"},"ZIO")," tagged with ",(0,n.kt)("inlineCode",{parentName:"p"},"Parallel")," has an ",(0,n.kt)("inlineCode",{parentName:"p"},"Applicative")," instance which is not ",(0,n.kt)("inlineCode",{parentName:"p"},"Monad")," and operates in parallel."),(0,n.kt)("h3",{id:"example-1"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"import scalaz._, Scalaz._\nimport zio.interop.scalaz._\n\ncase class Dashboard(details: UserDetails, history: TransactionHistory)\n\ndef getDetails(id: UserId): ZIO[Database, UserError, UserDetails] = ...\ndef getHistory(id: UserId): ZIO[Database, UserError, TransactionHistory] = ...\n\ndef buildDashboard(id: UserId): ZIO[Database, UserError, Dashboard] =\n  Tag.unwrap(^(par(getDetails(id)), par(getHistory(id)))(Dashboard.apply))\n\ndef par[R, E, A](io: ZIO[R, E, A]): ParIO[R, E, A] = Tag(io)\n")))}d.isMDXComponent=!0}}]);