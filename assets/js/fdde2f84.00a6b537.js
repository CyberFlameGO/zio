"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[71651],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,v=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(v,s(s({ref:t},c),{},{components:r})):n.createElement(v,s({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},62405:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={},s="HTTPS Client",i={unversionedId:"v1.x/examples/zio-http-basic-examples/https_client",id:"v1.x/examples/zio-http-basic-examples/https_client",title:"HTTPS Client",description:"",source:"@site/node_modules/@zio.dev/zio-http/v1.x/examples/zio-http-basic-examples/https_client.md",sourceDirName:"v1.x/examples/zio-http-basic-examples",slug:"/v1.x/examples/zio-http-basic-examples/https_client",permalink:"/zio-http/v1.x/examples/zio-http-basic-examples/https_client",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HTTP Server",permalink:"/zio-http/v1.x/examples/zio-http-basic-examples/http_server"},next:{title:"HTTPS Server",permalink:"/zio-http/v1.x/examples/zio-http-basic-examples/https_server"}},p={},l=[],c={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"https-client"},"HTTPS Client"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import io.netty.handler.ssl.SslContextBuilder\nimport zio.http.model.headers.Headers\nimport zio.http.service.ClientSSLHandler.ClientSSLOptions\nimport zio.http.service.{ChannelFactory, Client, EventLoopGroup}\nimport zio._\n\nimport java.io.InputStream\nimport java.security.KeyStore\nimport javax.net.ssl.TrustManagerFactory\n\nobject HttpsClient extends App {\n  val env     = ChannelFactory.auto ++ EventLoopGroup.auto()\n  val url     = "https://sports.api.decathlon.com/groups/water-aerobics"\n  val headers = Headers.host("sports.api.decathlon.com")\n\n // Configuring Truststore for https(optional)\n  val trustStore: KeyStore                     = KeyStore.getInstance("JKS")\n  val trustStorePath: InputStream              = getClass.getClassLoader.getResourceAsStream("truststore.jks")\n  val trustStorePassword: String               = "changeit"\n  val trustManagerFactory: TrustManagerFactory =\n    TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm)\n\n  trustStore.load(trustStorePath, trustStorePassword.toCharArray)\n  trustManagerFactory.init(trustStore)\n\n  val sslOption: ClientSSLOptions =\n    ClientSSLOptions.CustomSSL(SslContextBuilder.forClient().trustManager(trustManagerFactory).build())\n\n  val program = for {\n    res  <- Client.request(url, headers, sslOption)\n    data <- res.bodyAsString\n    _    <- console.putStrLn { data }\n  } yield ()\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] \n    = program.exitCode.provideCustomLayer(env)\n\n}\n')))}u.isMDXComponent=!0}}]);