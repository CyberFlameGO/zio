"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[64551],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),f=i,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||o;return r?n.createElement(d,a(a({ref:t},p),{},{components:r})):n.createElement(d,a({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},32197:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={id:"zio-metrics",title:"ZIO Metrics"},a=void 0,s={unversionedId:"ecosystem/officials/zio-metrics",id:"ecosystem/officials/zio-metrics",title:"ZIO Metrics",description:"ZIO Metrcis is a high-performance, purely-functional library for adding instrumentation to any application, with a simple web client and JMX support.",source:"@site/docs/ecosystem/officials/zio-metrics.md",sourceDirName:"ecosystem/officials",slug:"/ecosystem/officials/zio-metrics",permalink:"/ecosystem/officials/zio-metrics",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/officials/zio-metrics.md",tags:[],version:"current",frontMatter:{id:"zio-metrics",title:"ZIO Metrics"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-metrics"},"ZIO Metrcis")," is a high-performance, purely-functional library for adding instrumentation to any application, with a simple web client and JMX support."),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"ZIO Metrics is a pure-ZIO StatsD/DogStatsD client and a thin wrapper over both ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://github.com/prometheus/client_java"},"Prometheus"))," and ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://metrics.dropwizard.io/4.2.0/manual/core.html"},"Dropwizard"))," instrumentation libraries allowing us to measure the behavior of our application in a performant purely functional manner."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"In order to use this library, we need to one of the following lines in our ",(0,i.kt)("inlineCode",{parentName:"p"},"build.sbt")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'// Prometheus\nlibraryDependencies += "dev.zio" %% "zio-metrics-prometheus" % "1.0.12"\n\n// Dropwizard\nlibraryDependencies += "dev.zio" %% "zio-metrics-dropwizard" % "1.0.12"\n\n// StatsD/DogStatsD\nlibraryDependencies += "dev.zio" %% "zio-metrics-statsd" % "1.0.12"\n')),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"In this example we are using ",(0,i.kt)("inlineCode",{parentName:"p"},"zio-metrics-prometheus")," module. Other that initializing default exporters, we register a counter to the registry:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.Runtime\nimport zio.console.{Console, putStrLn}\nimport zio.metrics.prometheus._\nimport zio.metrics.prometheus.exporters._\nimport zio.metrics.prometheus.helpers._\n\nobject ZIOMetricsExample extends scala.App {\n\n  val myApp =\n    for {\n      r <- getCurrentRegistry()\n      _ <- initializeDefaultExports(r)\n      c <- counter.register("ServiceA", Array("Request", "Region"))\n      _ <- c.inc(1.0, Array("GET", "us-west-*"))\n      _ <- c.inc(2.0, Array("POST", "eu-south-*"))\n      _ <- c.inc(3.0, Array("GET", "eu-south-*"))\n      s <- http(r, 9090)\n      _ <- putStrLn(s"The application\'s metric endpoint: http://localhost:${s.getPort}/")\n    } yield s\n\n  Runtime\n    .unsafeFromLayer(\n      Registry.live ++ Exporters.live ++ Console.live\n    )\n    .unsafeRun(myApp)\n}\n')),(0,i.kt)("p",null,"Now, the application's metrics are accessible via ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:9090")," endpoint."))}u.isMDXComponent=!0}}]);