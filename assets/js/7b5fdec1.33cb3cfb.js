"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[55390],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>b});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),b=a,d=m["".concat(l,".").concat(b)]||m[b]||u[b]||i;return t?n.createElement(d,o(o({ref:r},c),{},{components:t})):n.createElement(d,o({ref:r},c))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},71848:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=t(87462),a=(t(67294),t(3905));const i={id:"index",title:"Introduction to ZIO Interop Reactive Streams",sidebar_label:"ZIO Interop Reactive Streams"},o=void 0,s={unversionedId:"index",id:"index",title:"Introduction to ZIO Interop Reactive Streams",description:"This library provides an interoperability layer between ZIO and reactive streams.",source:"@site/node_modules/@zio.dev/zio-interop-reactivestreams/index.md",sourceDirName:".",slug:"/",permalink:"/zio-interop-reactivestreams/",draft:!1,tags:[],version:"current",frontMatter:{id:"index",title:"Introduction to ZIO Interop Reactive Streams",sidebar_label:"ZIO Interop Reactive Streams"},sidebar:"sidebar"},l={},p=[{value:"Reactive Streams <code>Producer</code> and <code>Subscriber</code>",id:"reactive-streams-producer-and-subscriber",level:2},{value:"Examples",id:"examples",level:2},{value:"Publisher to Stream",id:"publisher-to-stream",level:3},{value:"Subscriber to Sink",id:"subscriber-to-sink",level:3},{value:"Stream to Publisher",id:"stream-to-publisher",level:3},{value:"Sink to Subscriber",id:"sink-to-subscriber",level:3}],c={toc:p};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This library provides an interoperability layer between ZIO and reactive streams."),(0,a.kt)("h2",{id:"reactive-streams-producer-and-subscriber"},"Reactive Streams ",(0,a.kt)("inlineCode",{parentName:"h2"},"Producer")," and ",(0,a.kt)("inlineCode",{parentName:"h2"},"Subscriber")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"ZIO")," integrates with ",(0,a.kt)("a",{parentName:"p",href:"http://reactive-streams.org"},"Reactive Streams")," by providing conversions from ",(0,a.kt)("inlineCode",{parentName:"p"},"zio.stream.Stream")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"org.reactivestreams.Publisher"),"\nand from ",(0,a.kt)("inlineCode",{parentName:"p"},"zio.stream.Sink")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"org.reactivestreams.Subscriber")," and vice versa. Simply import ",(0,a.kt)("inlineCode",{parentName:"p"},"import zio.interop.reactivestreams._")," to make the\nconversions available."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"First, let's get a few imports out of the way."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import org.reactivestreams.example.unicast._\nimport zio._\nimport zio.interop.reactivestreams._\nimport zio.stream._\n")),(0,a.kt)("p",null,"We use the following ",(0,a.kt)("inlineCode",{parentName:"p"},"Publisher")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscriber")," for the examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'val publisher = new RangePublisher(3, 10)\nval subscriber = new SyncSubscriber[Int] {\n  override protected def whenNext(v: Int): Boolean = {\n    print(s"$v, ")\n    true\n  }\n}\n')),(0,a.kt)("h3",{id:"publisher-to-stream"},"Publisher to Stream"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"Publisher")," used as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Stream")," buffers up to ",(0,a.kt)("inlineCode",{parentName:"p"},"qSize")," elements. If possible, ",(0,a.kt)("inlineCode",{parentName:"p"},"qSize")," should be\na power of two for best performance. The default is 16."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"val streamFromPublisher = publisher.toZIOStream(qSize = 16)\nstreamFromPublisher.run(Sink.collectAll[Integer])\n")),(0,a.kt)("h3",{id:"subscriber-to-sink"},"Subscriber to Sink"),(0,a.kt)("p",null,"When running a ",(0,a.kt)("inlineCode",{parentName:"p"},"Stream")," to a ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscriber"),", a side channel is needed for signalling failures.\nFor this reason ",(0,a.kt)("inlineCode",{parentName:"p"},"toZIOSink")," returns a tuple of a callback and a ",(0,a.kt)("inlineCode",{parentName:"p"},"Sink"),". The callback must be used to signal ",(0,a.kt)("inlineCode",{parentName:"p"},"Stream")," failure. The type parameter on ",(0,a.kt)("inlineCode",{parentName:"p"},"toZIOSink")," is the error type of ",(0,a.kt)("em",{parentName:"p"},"the Stream"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'val asSink = subscriber.toZIOSink[Throwable]\nval failingStream = ZStream.range(3, 13) ++ ZStream.fail(new RuntimeException("boom!"))\nZIO.scoped {\n  asSink.flatMap { case (signalError, sink) => // FIXME\n    failingStream.run(sink).catchAll(signalError)\n  }\n}\n')),(0,a.kt)("h3",{id:"stream-to-publisher"},"Stream to Publisher"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"val stream = Stream.range(3, 13)\nstream.toPublisher.flatMap { publisher =>\n  UIO(publisher.subscribe(subscriber))\n}\n")),(0,a.kt)("h3",{id:"sink-to-subscriber"},"Sink to Subscriber"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"toSubscriber")," returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscriber")," and an ",(0,a.kt)("inlineCode",{parentName:"p"},"IO")," which completes with the result of running the\n",(0,a.kt)("inlineCode",{parentName:"p"},"Sink")," or the error if the ",(0,a.kt)("inlineCode",{parentName:"p"},"Publisher")," fails.\nA ",(0,a.kt)("inlineCode",{parentName:"p"},"Sink")," used as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Subscriber")," buffers up to ",(0,a.kt)("inlineCode",{parentName:"p"},"qSize")," elements. If possible, ",(0,a.kt)("inlineCode",{parentName:"p"},"qSize")," should be\na power of two for best performance. The default is 16."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"val sink = Sink.collectAll[Integer]\nZIO.scoped {\n  sink.toSubscriber(qSize = 16).flatMap { case (subscriber, result) => \n    UIO(publisher.subscribe(subscriber)) *> result\n  }\n}\n")))}u.isMDXComponent=!0}}]);